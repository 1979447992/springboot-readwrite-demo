version: '3.8'

services:
  # Oracle数据库服务
  oracle-db:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    container_name: oracle-xe
    environment:
      - ORACLE_PWD=OraclePassword123
      - ORACLE_CHARACTERSET=AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - readwrite-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sqlplus", "-S", "sys/OraclePassword123@localhost:1521/XE as sysdba", "<<<", "SELECT 1 FROM DUAL;"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spring Boot应用服务
  readwrite-app:
    build: .
    container_name: readwrite-demo
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_MASTER_JDBC_URL=jdbc:oracle:thin:@oracle-db:1521/XEPDB1
      - SPRING_DATASOURCE_MASTER_USERNAME=MASTER_USER
      - SPRING_DATASOURCE_MASTER_PASSWORD=master_password
      - SPRING_DATASOURCE_SLAVE_JDBC_URL=jdbc:oracle:thin:@oracle-db:1521/XEPDB1
      - SPRING_DATASOURCE_SLAVE_USERNAME=SLAVE_USER
      - SPRING_DATASOURCE_SLAVE_PASSWORD=slave_password
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      oracle-db:
        condition: service_healthy
    networks:
      - readwrite-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - readwrite-app
    networks:
      - readwrite-network
    restart: unless-stopped

volumes:
  oracle-data:
    driver: local

networks:
  readwrite-network:
    driver: bridge